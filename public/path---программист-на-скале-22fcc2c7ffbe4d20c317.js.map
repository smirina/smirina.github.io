{"version":3,"sources":["webpack:///path---программист-на-скале-22fcc2c7ffbe4d20c317.js","webpack:///./.cache/json/программист-на-скале.json"],"names":["webpackJsonp","435","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","author","fields","slug","prev","next","authors","edges","node","id","name","image","url","bio","pathContext","total"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,iqQAAAC,WAAA,EAAAC,QAAA,gJAAAC,aAA43QC,MAAA,uBAAAC,MAAA,4KAAAC,KAAA,aAAAC,SAAA,QAAAC,MAAA,gDAAAC,OAAA,SAAmUC,QAAWC,KAAA,0BAAgCC,MAASV,QAAA,gHAAAC,aAAyIC,MAAA,gCAAAC,MAAA,6CAAAC,KAAA,cAAiHI,QAAWC,KAAA,mCAAyCE,MAASX,QAAA,gHAAAC,aAAyIC,MAAA,gCAAAC,MAAA,6CAAAC,KAAA,cAAiHI,QAAWC,KAAA,mCAAyCG,SAAYC,QAAUC,MAAQC,GAAA,QAAAC,KAAA,kBAAAC,MAAA,iBAAAC,IAAA,sCAAAC,IAAA,gJAAgQC,aAAgBX,KAAA,wBAAAY,MAAA,EAAAX,KAAA,iCAAAC,KAAA","file":"path---программист-на-скале-22fcc2c7ffbe4d20c317.js","sourcesContent":["webpackJsonp([5079281684480],{\n\n/***/ 435:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><em>Этот пост - перевод статьи Breck Yunit <a href=\\\"http://breckyunits.com/what-can-a-programmer-learn-from-rock-climbing.html\\\">What can a Programmer learn from Rock Climbing?</a></em></p>\\n<h2 id=\\\"Чему-программиста-учит-скалолазание\\\"><a href=\\\"#%D0%A7%D0%B5%D0%BC%D1%83-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%D0%B0-%D1%83%D1%87%D0%B8%D1%82-%D1%81%D0%BA%D0%B0%D0%BB%D0%BE%D0%BB%D0%B0%D0%B7%D0%B0%D0%BD%D0%B8%D0%B5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Чему программиста учит скалолазание?</h2>\\n<p>Рейли-бич - это крошечный пляж на юге Тайланда, известный среди скалолазов. Я пробыл там две недели.\\nКогда позволяла погода, я занимался скалолазанием. Когда не позволяла - программированием. И я буквально обнаружил себя совмещающим и то, и другое. Точнее, я размышлял над тем, что я могу извлечь из этого скалолазного опыта и применить к развитию себя как программиста.</p>\\n<p>Вот к чему я пришел.</p>\\n<ol>\\n<li>\\n<p><strong>Нужно постоянно себя заставлять.</strong> Каждый раз, залезая на скалу, я делал это чуть-чуть лучше, чем в предыдущий. Ленивая часть меня хотела провести хоть один день радуясь тому, что я уже умею, и не пытаясь прыгнуть выше головы. К счастью, у меня был прекрасный напарник, который пресекал это, и каждый день толкал меня к новой цели. И в программировании, и в скалолазании нужно каждый день стремиться к лучшему уровню. Это непросто, и есть риск упасть, забираясь на новую высоту, но это необходимо, если вы хотите стать профессионалом. В программировании, точно так же, как и в скалолазании, нужно стремиться к обществу тех, кто уже залез на следующий уровень. Так становишься лучше. Конечно, не стоит забывать и просто радоваться моменту.</p>\\n</li>\\n<li>\\n<p>** <em>Действительно</em> заставлять себя.** В скалолазании бывают моменты, когда ты напуган <em>- нет, когда ты в диком ужасе -</em>, что ты сейчас упадешь и покалечишься, или умрешь, и ты цепляешься за скалу, покрываясь потом, и нужно преодолеть это. В программировании нужно <em>специально выискивать такие моменты</em>. Конечно, такого экстрима никогда не будет, но нужно выискивать проблемы, с которыми страшно столкнуться, и сражаться с ними. Это может быть проект, объем которого выходит за рамки того, что ты делал раньше, или задача, требующая знвний высшей математики, или язык, который пугает до жути. Моим инструктором был таец по имени Ну. Он второй по лазанию на скорость в Тайланде, и занимается этим уже 15 лет. Однажды я прогуливался возле скал и увидел, как Ну стучал себя по груди и кричал во весь голос. Я спросил у наблюдателя, что происходит, и он ответил, что Ну пытается вылезти сложный маршрут и сам себя заставляет сделать это. Вот почему он прекрасный скалолаз. Потому что он на скалах уже 15 лет и все еще продолжает искать маршруты, которые его пугают.</p>\\n</li>\\n<li>\\n<p><strong>Всегда есть следующий уровень.</strong> В скалолазании есть конкретные уровни сложности, через которые вы проходите, например совершенствуясь от сложности трассы 5 до 8+, или от движения с верхней страховкой до прокладывания маршрута. В программировании уровни менее определенные и охватывают более широкий диапазон, но они точно существуют. Ты идешь от \\\"hello world\\\" к написанию компилятора, или от использования Блокнота к vim, textmate и мощным IDE. Можно в начале написать генератор плейлистов, а через десять лет - программу, которая сама генерирует настоящие симфонии, и все равно останутся уровни выше, куда можно забраться.</p>\\n</li>\\n<li>\\n<p><strong>Программирование или лазание без учителей неэффективно.</strong> Есть много книг про скалолазание, но они не заменят хорошего учителя. Вы можете повторять то, что видете в книгах, и даже делать это правильно, но учитель сможет сказать, что вы делаете <em>неправильно</em>. Самому трудно понять, какие концепции или техники ключевые и сосредоточиться именно на них. Так можно не обратить внимание на что-то действительно важное, например на использовании преимущественно ног в скалолазании, или принципе DRY в программировании. Хороший наставник может сразу увидеть ошибки и дать нужную обратную связь. Стоит всегда искать хороших учителей и наставников, будь они друзьями, коллегами или профессиональными педагогами.</p>\\n</li>\\n<li>\\n<p><strong>Мы учимся делая: главное - практика.</strong> Хотя нам нужны учителя и книги, чтобы узнать, что делать, единственный способ научиться - сделать самому, и снова, и снова. Требуется куча времени, чтобы достигнуть хорошего уровня в скалолазании или программировании, но хотя получение инструкций играет важную роль, подавляющая часть времени обучения будет потрачена на практику.</p>\\n</li>\\n<li>\\n<p><strong>Важна не только глубина, но и ширина.</strong> Иногда, чтобы достичь следующего уровня в скалолазнии, нужно выйти за пределы скалолазания. Возможно, потребуется заняться йогой для нужной гибкости, или силовыми тренировками. Так же и в программировании - иногда нужно отойти в сторону, чтобы подняться. Если ты хочешь писать на Rails, придется отвлечся на работу с командной строкой или контролем версий. В программировании огромное количество областей. Чтобы углубиться в одну, нужно иметь компетенцию во многих.</p>\\n</li>\\n<li>\\n<p><strong>Люди раздвигают границы.</strong> Скалолазание и программирование постоянно исследуются людьми, и люди раздвигают их границы. Продвинутые скалолазы постоянно открывают новые районы, прокладывают новые маршруты, изобретают новое снаряжение, совершенствуют техники и передают новые знания. Программирование является самым кумулятивным из всех человеческих начинаний. Оно основывается на работе десятков миллионов людей, и новые \\\"экстремалы\\\" постоянно раздвигают границы (сегодня в таких областях как распределенные вычисления, датамайнинг, машинное обучение и прочих).</p>\\n</li>\\n<li>\\n<p><strong>Любить совместную работу.</strong> Культура скалолазания очень коллективная, как и культура опенсорса. Скалолазание - это по существу деятельность с открытым исходным источником. Все, что делает и использует скалолаз видно в открытую. Это приводит к быстрой передаче знаний и большей безопасности. Так же и програмное обеспечение с открытым исходным кодом приводит к лучшему результату для всех.</p>\\n</li>\\n<li>\\n<p><strong>Гордиться своей работой.</strong> В скалолазании имя того, кто первым восходит по маршруту, становится навсегда связанным с этим маршрутом. В программировании нужно гордиться своей работой и добавлять к ней свое имя. Мне бывает неловко смотреть на свой старый код и понимать, как он плох. Но я отгоняю это ощущение, потому что хоть код и не соответствовует стандартам сегодняшнего меня, он отражает мою честную попытку сделать лучшее, что я мог на тот момент, и здесь нечего стыдиться. Я уверен, что величайшие скалолазы мира в свое время боролись с самыми простыми трассами.</p>\\n</li>\\n<li>\\n<p><strong>Природные данные имеют значение.</strong> Некоторые люди, тренировавшиеся 5000 будут показывать результаты хуже, чем те, кто практиковались всего 2000 часов, из-за генетики и других факторов. Было бы прекрасно, если бы наш успех в чем-то определялся только тем, сколько времени мы в это вложили. Но это не так. Тем не менее, самые лучшие скалолазы проводят огромное количество времени тренируясь. Для большинства же разница заключается только в удаче. Я работал со многими програмистами за мою (пока не очень долгую) карьеру. Я работал с невероятно умными и со средними. Кто-то тяжело работал, а кому-то было все равно. Лучше всего, конечно, обладать и интелеектом, и самодисциплиной. И, вероятно, я предпочел бы работать со средним, но вовлеченным специалистом, чем с блестящим, но ленивым.</p>\\n</li>\\n</ol>\\n<p><strong>Примечание.</strong>\\nСкалолазание и программирование отлично дополняют друг друга, потому что скалолазание помогает отлично размять постоянно печатающие руки.</p>\\n<p>Я ужасный скалолаз и рядовой программист. Принимайте мои советы с долей скепсиса.</p>\",\"timeToRead\":5,\"excerpt\":\"Этот пост - перевод статьи Breck Yunit  What can a Programmer learn from Rock Climbing? Чему программиста учит скалолазание? Рейли-бич - это…\",\"frontmatter\":{\"title\":\"Программист на скале\",\"cover\":\"https://images.unsplash.com/photo-1508287459906-37445322fdf6?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=3cebb3d42406d3197deb0d7b80f01a20&auto=format&fit=crop&w=3300&q=80\",\"date\":\"2017-10-07\",\"category\":\"lyric\",\"tags\":[\"translation\",\"programming\",\"climbing\",\"other\"],\"author\":\"irina\"},\"fields\":{\"slug\":\"/программист-на-скале\"}},\"prev\":{\"excerpt\":\"Этот пост - перевод статьи Криса Бимса  How to Write a Git Commit Message Вступление: почему важны сообщения…\",\"frontmatter\":{\"title\":\"Как писать сообщения коммитов\",\"cover\":\"http://imgs.xkcd.com/comics/git_commit.png\",\"date\":\"2016-12-04\"},\"fields\":{\"slug\":\"/как-писать-сообщения-коммитов\"}},\"next\":{\"excerpt\":\"Этот пост - перевод статьи Криса Бимса  How to Write a Git Commit Message Вступление: почему важны сообщения…\",\"frontmatter\":{\"title\":\"Как писать сообщения коммитов\",\"cover\":\"http://imgs.xkcd.com/comics/git_commit.png\",\"date\":\"2016-12-04\"},\"fields\":{\"slug\":\"/как-писать-сообщения-коммитов\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"irina\",\"name\":\"Ирина Смышляева\",\"image\":\"/images/me.jpg\",\"url\":\"https://www.instagram.com/irinanit/\",\"bio\":\"Если знаете текст, которому очень-очень нужен перевод - напишите на почту. А если хотите купить мне кофе - то вообще в любой мессенджер.\"}}]}},\"pathContext\":{\"slug\":\"/программист-на-скале\",\"total\":2,\"prev\":\"/как-писать-сообщения-коммитов\",\"next\":\"/как-писать-сообщения-коммитов\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---программист-на-скале-22fcc2c7ffbe4d20c317.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><em>Этот пост - перевод статьи Breck Yunit <a href=\\\"http://breckyunits.com/what-can-a-programmer-learn-from-rock-climbing.html\\\">What can a Programmer learn from Rock Climbing?</a></em></p>\\n<h2 id=\\\"Чему-программиста-учит-скалолазание\\\"><a href=\\\"#%D0%A7%D0%B5%D0%BC%D1%83-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%D0%B0-%D1%83%D1%87%D0%B8%D1%82-%D1%81%D0%BA%D0%B0%D0%BB%D0%BE%D0%BB%D0%B0%D0%B7%D0%B0%D0%BD%D0%B8%D0%B5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Чему программиста учит скалолазание?</h2>\\n<p>Рейли-бич - это крошечный пляж на юге Тайланда, известный среди скалолазов. Я пробыл там две недели.\\nКогда позволяла погода, я занимался скалолазанием. Когда не позволяла - программированием. И я буквально обнаружил себя совмещающим и то, и другое. Точнее, я размышлял над тем, что я могу извлечь из этого скалолазного опыта и применить к развитию себя как программиста.</p>\\n<p>Вот к чему я пришел.</p>\\n<ol>\\n<li>\\n<p><strong>Нужно постоянно себя заставлять.</strong> Каждый раз, залезая на скалу, я делал это чуть-чуть лучше, чем в предыдущий. Ленивая часть меня хотела провести хоть один день радуясь тому, что я уже умею, и не пытаясь прыгнуть выше головы. К счастью, у меня был прекрасный напарник, который пресекал это, и каждый день толкал меня к новой цели. И в программировании, и в скалолазании нужно каждый день стремиться к лучшему уровню. Это непросто, и есть риск упасть, забираясь на новую высоту, но это необходимо, если вы хотите стать профессионалом. В программировании, точно так же, как и в скалолазании, нужно стремиться к обществу тех, кто уже залез на следующий уровень. Так становишься лучше. Конечно, не стоит забывать и просто радоваться моменту.</p>\\n</li>\\n<li>\\n<p>** <em>Действительно</em> заставлять себя.** В скалолазании бывают моменты, когда ты напуган <em>- нет, когда ты в диком ужасе -</em>, что ты сейчас упадешь и покалечишься, или умрешь, и ты цепляешься за скалу, покрываясь потом, и нужно преодолеть это. В программировании нужно <em>специально выискивать такие моменты</em>. Конечно, такого экстрима никогда не будет, но нужно выискивать проблемы, с которыми страшно столкнуться, и сражаться с ними. Это может быть проект, объем которого выходит за рамки того, что ты делал раньше, или задача, требующая знвний высшей математики, или язык, который пугает до жути. Моим инструктором был таец по имени Ну. Он второй по лазанию на скорость в Тайланде, и занимается этим уже 15 лет. Однажды я прогуливался возле скал и увидел, как Ну стучал себя по груди и кричал во весь голос. Я спросил у наблюдателя, что происходит, и он ответил, что Ну пытается вылезти сложный маршрут и сам себя заставляет сделать это. Вот почему он прекрасный скалолаз. Потому что он на скалах уже 15 лет и все еще продолжает искать маршруты, которые его пугают.</p>\\n</li>\\n<li>\\n<p><strong>Всегда есть следующий уровень.</strong> В скалолазании есть конкретные уровни сложности, через которые вы проходите, например совершенствуясь от сложности трассы 5 до 8+, или от движения с верхней страховкой до прокладывания маршрута. В программировании уровни менее определенные и охватывают более широкий диапазон, но они точно существуют. Ты идешь от \\\"hello world\\\" к написанию компилятора, или от использования Блокнота к vim, textmate и мощным IDE. Можно в начале написать генератор плейлистов, а через десять лет - программу, которая сама генерирует настоящие симфонии, и все равно останутся уровни выше, куда можно забраться.</p>\\n</li>\\n<li>\\n<p><strong>Программирование или лазание без учителей неэффективно.</strong> Есть много книг про скалолазание, но они не заменят хорошего учителя. Вы можете повторять то, что видете в книгах, и даже делать это правильно, но учитель сможет сказать, что вы делаете <em>неправильно</em>. Самому трудно понять, какие концепции или техники ключевые и сосредоточиться именно на них. Так можно не обратить внимание на что-то действительно важное, например на использовании преимущественно ног в скалолазании, или принципе DRY в программировании. Хороший наставник может сразу увидеть ошибки и дать нужную обратную связь. Стоит всегда искать хороших учителей и наставников, будь они друзьями, коллегами или профессиональными педагогами.</p>\\n</li>\\n<li>\\n<p><strong>Мы учимся делая: главное - практика.</strong> Хотя нам нужны учителя и книги, чтобы узнать, что делать, единственный способ научиться - сделать самому, и снова, и снова. Требуется куча времени, чтобы достигнуть хорошего уровня в скалолазании или программировании, но хотя получение инструкций играет важную роль, подавляющая часть времени обучения будет потрачена на практику.</p>\\n</li>\\n<li>\\n<p><strong>Важна не только глубина, но и ширина.</strong> Иногда, чтобы достичь следующего уровня в скалолазнии, нужно выйти за пределы скалолазания. Возможно, потребуется заняться йогой для нужной гибкости, или силовыми тренировками. Так же и в программировании - иногда нужно отойти в сторону, чтобы подняться. Если ты хочешь писать на Rails, придется отвлечся на работу с командной строкой или контролем версий. В программировании огромное количество областей. Чтобы углубиться в одну, нужно иметь компетенцию во многих.</p>\\n</li>\\n<li>\\n<p><strong>Люди раздвигают границы.</strong> Скалолазание и программирование постоянно исследуются людьми, и люди раздвигают их границы. Продвинутые скалолазы постоянно открывают новые районы, прокладывают новые маршруты, изобретают новое снаряжение, совершенствуют техники и передают новые знания. Программирование является самым кумулятивным из всех человеческих начинаний. Оно основывается на работе десятков миллионов людей, и новые \\\"экстремалы\\\" постоянно раздвигают границы (сегодня в таких областях как распределенные вычисления, датамайнинг, машинное обучение и прочих).</p>\\n</li>\\n<li>\\n<p><strong>Любить совместную работу.</strong> Культура скалолазания очень коллективная, как и культура опенсорса. Скалолазание - это по существу деятельность с открытым исходным источником. Все, что делает и использует скалолаз видно в открытую. Это приводит к быстрой передаче знаний и большей безопасности. Так же и програмное обеспечение с открытым исходным кодом приводит к лучшему результату для всех.</p>\\n</li>\\n<li>\\n<p><strong>Гордиться своей работой.</strong> В скалолазании имя того, кто первым восходит по маршруту, становится навсегда связанным с этим маршрутом. В программировании нужно гордиться своей работой и добавлять к ней свое имя. Мне бывает неловко смотреть на свой старый код и понимать, как он плох. Но я отгоняю это ощущение, потому что хоть код и не соответствовует стандартам сегодняшнего меня, он отражает мою честную попытку сделать лучшее, что я мог на тот момент, и здесь нечего стыдиться. Я уверен, что величайшие скалолазы мира в свое время боролись с самыми простыми трассами.</p>\\n</li>\\n<li>\\n<p><strong>Природные данные имеют значение.</strong> Некоторые люди, тренировавшиеся 5000 будут показывать результаты хуже, чем те, кто практиковались всего 2000 часов, из-за генетики и других факторов. Было бы прекрасно, если бы наш успех в чем-то определялся только тем, сколько времени мы в это вложили. Но это не так. Тем не менее, самые лучшие скалолазы проводят огромное количество времени тренируясь. Для большинства же разница заключается только в удаче. Я работал со многими програмистами за мою (пока не очень долгую) карьеру. Я работал с невероятно умными и со средними. Кто-то тяжело работал, а кому-то было все равно. Лучше всего, конечно, обладать и интелеектом, и самодисциплиной. И, вероятно, я предпочел бы работать со средним, но вовлеченным специалистом, чем с блестящим, но ленивым.</p>\\n</li>\\n</ol>\\n<p><strong>Примечание.</strong>\\nСкалолазание и программирование отлично дополняют друг друга, потому что скалолазание помогает отлично размять постоянно печатающие руки.</p>\\n<p>Я ужасный скалолаз и рядовой программист. Принимайте мои советы с долей скепсиса.</p>\",\"timeToRead\":5,\"excerpt\":\"Этот пост - перевод статьи Breck Yunit  What can a Programmer learn from Rock Climbing? Чему программиста учит скалолазание? Рейли-бич - это…\",\"frontmatter\":{\"title\":\"Программист на скале\",\"cover\":\"https://images.unsplash.com/photo-1508287459906-37445322fdf6?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=3cebb3d42406d3197deb0d7b80f01a20&auto=format&fit=crop&w=3300&q=80\",\"date\":\"2017-10-07\",\"category\":\"lyric\",\"tags\":[\"translation\",\"programming\",\"climbing\",\"other\"],\"author\":\"irina\"},\"fields\":{\"slug\":\"/программист-на-скале\"}},\"prev\":{\"excerpt\":\"Этот пост - перевод статьи Криса Бимса  How to Write a Git Commit Message Вступление: почему важны сообщения…\",\"frontmatter\":{\"title\":\"Как писать сообщения коммитов\",\"cover\":\"http://imgs.xkcd.com/comics/git_commit.png\",\"date\":\"2016-12-04\"},\"fields\":{\"slug\":\"/как-писать-сообщения-коммитов\"}},\"next\":{\"excerpt\":\"Этот пост - перевод статьи Криса Бимса  How to Write a Git Commit Message Вступление: почему важны сообщения…\",\"frontmatter\":{\"title\":\"Как писать сообщения коммитов\",\"cover\":\"http://imgs.xkcd.com/comics/git_commit.png\",\"date\":\"2016-12-04\"},\"fields\":{\"slug\":\"/как-писать-сообщения-коммитов\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"irina\",\"name\":\"Ирина Смышляева\",\"image\":\"/images/me.jpg\",\"url\":\"https://www.instagram.com/irinanit/\",\"bio\":\"Если знаете текст, которому очень-очень нужен перевод - напишите на почту. А если хотите купить мне кофе - то вообще в любой мессенджер.\"}}]}},\"pathContext\":{\"slug\":\"/программист-на-скале\",\"total\":2,\"prev\":\"/как-писать-сообщения-коммитов\",\"next\":\"/как-писать-сообщения-коммитов\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/программист-на-скале.json\n// module id = 435\n// module chunks = 5079281684480"],"sourceRoot":""}